AWSTemplateFormatVersion: 2010-09-09
Description: Redis

Parameters:
  EnvName:
    Type: String
    Default: prod

Resources:
  RedisSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Redis access
      VpcId:
        Fn::ImportValue: !Sub "${EnvName}-VPC-Output"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 10.0.20.0/24
        - IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
          CidrIp: 10.0.21.0/24
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-Redis-SecurityGroup

  WEBRedisSubNetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      CacheSubnetGroupName: web-cache-subnet-group
      Description: web-cache
      SubnetIds:
        - Fn::ImportValue: !Sub "${EnvName}-PrivateSubnet1a-Output"
        - Fn::ImportValue: !Sub "${EnvName}-PrivateSubnet1c-Output"

  WEBRedis:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      ReplicationGroupId: !Sub ${EnvName}-WEB-Redis
      AtRestEncryptionEnabled: true
      #AuthToken: ABCDEFGHIJKLMNOPQRSTUVWXYZ
      AutomaticFailoverEnabled: true
      AutoMinorVersionUpgrade: false
      CacheNodeType: cache.t4g.micro
      CacheSubnetGroupName: !Ref WEBRedisSubNetGroup
      ClusterMode: disabled
      Engine: redis
      EngineVersion: 7.1
      IpDiscovery: ipv4
      MultiAZEnabled: true
      NetworkType: ipv4
      NumCacheClusters: 2
      Port: 6379
      ReplicationGroupDescription: web-cache-group
      SecurityGroupIds: 
        - !Ref RedisSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${EnvName}-WEB-Redis
      TransitEncryptionEnabled: true
      TransitEncryptionMode: required
